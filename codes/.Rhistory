init_cohort_r(),
init_cohort_cpp(trt_prop_tbl,i,j,k,l)
)
microbenchmark(
init_cohort_r(),
init_cohort_cpp(trt_prop_tbl,i,j,k,l)
)
microbenchmark(
init_cohort_r(),
init_cohort_cpp(trt_prop_tbl,i,j,k,l)
)
microbenchmark(
init_cohort_r(),
init_cohort_cpp(trt_prop_tbl,i,j,k,l)
)
cppFunction('
void init_cohort_cpp2 () {
double cohort_c[13][4][10][2];
trt_prop_tbl <<- c(1,2,3,4,5,6,7,8,9,10,11,12,13);
for (int ii=0; ii<13; ++ii)
for (int jj=0; jj<4; ++jj)
for (int kk=0; kk<10; ++kk)
for (int ll=0; ll<2; ++ll)
cohort_c[ii][jj][kk][ll] = trt_prop_tbl[ii];
}')
cppFunction('
void init_cohort_cpp2 () {
double cohort_c[13][4][10][2];
NumericVector trt_prop_tbl(1,2,3,4,5,6,7,8,9,10,11,12,13);
std::cout<<trt_prop_tbl[6] <<trt_prop_tbl[10]<<std::endl;
for (int ii=0; ii<13; ++ii)
for (int jj=0; jj<4; ++jj)
for (int kk=0; kk<10; ++kk)
for (int ll=0; ll<2; ++ll)
cohort_c[ii][jj][kk][ll] = trt_prop_tbl[ii];
}')
library(Rcpp)
install.packages("microbenchmark")
library(microbenchmark)
i <- 13
j <- 4
k <- 10
l <- 2
trt_prop_tbl <<- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
init_cohort_r<- function() {
cohort <- array(dim=c(i,j,k,l))
cohort[1:13,,,] <- trt_prop_tbl
}
cppFunction('
void init_cohort_cpp (NumericVector trt_prop_tbl) {
double cohort_c[13][4][10][2];
for (int i=0; i<13; ++i)
for (int j=0; j<4; ++j)
for (int k=0; k<10; ++k)
for (int l=0; l<2; ++l)
cohort_c[i][j][k][l] = trt_prop_tbl[i];
}')
microbenchmark(
init_cohort_r(),
init_cohort_cpp(trt_prop_tbl)
)
microbenchmark(
init_cohort_r(),
init_cohort_cpp(trt_prop_tbl)
)
a <- c(1,2,3,4,5,6)
typeof(a)
library(Rcpp)
install.packages("microbenchmark")
library(microbenchmark)
i <- 13
j <- 4
k <- 10
l <- 2
trt_prop_tbl <- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
cppFunction('NumericVector const_c(NumericVector trt_prop_tbl) {
NumericVector new_tbl(13,0);
for (int i=0;i<13;i++)
new_tbl[i] = trt_prop_tbl[i]+1;
return new_tbl;
}')
cppFunction('NumericVector pdistC(double x, NumericVector ys) {
int n = ys.size();
NumericVector out(n);
for(int i = 0; i < n; ++i) {
out[i] = sqrt(pow(ys[i] - x, 2.0));
}
return out;
}')
test <- pdistC(2,trt_prop_tbl)
test
cppFunction('NumericVector pdistC(double x, const NumericVector ys) {
int n = ys.size();
NumericVector out(n);
for(int i = 0; i < n; ++i) {
out[i] = sqrt(pow(ys[i] - x, 2.0));
}
return out;
}')
test <- pdistC(2,trt_prop_tbl)
test
cppFunction('NumericVector const_c(NumericVector trt_prop_tbl) {
int n = ys.size();
NumericVector new_tbl(n);
for (int i=0;i<13;i++)
new_tbl[i] = trt_prop_tbl[i]+1;
return new_tbl;
}')
cppFunction('NumericVector const_c(NumericVector trt_prop_tbl) {
int n = trt_prop_tbl.size();
NumericVector new_tbl(n);
for (int i=0;i<13;i++)
new_tbl[i] = trt_prop_tbl[i]+1;
return new_tbl;
}')
new_tbl <- const_c(trt_prop_tbl)
new_tbl
cppFunction('NumericVector const_c(const NumericVector trt_prop_tbl) {
int n = trt_prop_tbl.size();
NumericVector new_tbl(n);
for (int i=0;i<13;i++)
new_tbl[i] = trt_prop_tbl[i]+1;
return new_tbl;
}')
new_tbl <- const_c(trt_prop_tbl)
new_tbl
trt_prop_tbl
cppFunction('NumericVector clone_c(NumericVector trt_prop_tbl) {
NumericVector new_tbl=clone(trt_prop_tbl);
for (int i=0;i<13;i++)
new_tbl[i] = new_tbl[i]+1;
return new_tbl;
}')
trt_prop_tbl
new_tbl2 <- clone_c(trt_prop_tbl)
new_tbl
new_tbl2
new_tbl2 <- clone_c(trt_prop_tbl)
new_tbl2
trt_prop_tbl
cppFunction('NumericVector read_vector_value_c(NumericVector trt_prop_tbl) {
for (int i=0;i<13;i++)
trt_prop_tbl[i] = trt_prop_tbl[i]+1;
return trt_prop_tbl;
}')
a <- 2
b <- 3
a <- b
a
b
b<-1
a
cppFunction('NumericVector clone_c2(NumericVector trt_prop_tbl) {
clone(trt_prop_tbl);
for (int i=0;i<13;i++)
trt_prop_tbl[i] = trt_prop_tbl[i]+1;
return trt_prop_tbl;
}')
trt_prop_tbl
new_tbl2 <- clone_c2(trt_prop_tbl)
new_tbl2
new_tbl2 <- clone_c2(trt_prop_tbl)
trt_prop_tbl
trt_prop_tbl <- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
new_tbl2 <- clone_c2(trt_prop_tbl)
trt_prop_tbl
cppFunction('NumericVector clone_c2(NumericVector trt_prop_tbl) {
NumericVector new_tbl=trt_prop_tbl;
for (int i=0;i<13;i++)
new_tbl[i] = new_tbl[i]+1;
return new_tbl;
}')
trt_prop_tbl <- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
new_tbl2 <- clone_c2(trt_prop_tbl)
new_tbl2
trt_prop_tbl
new_tbl2 <- clone_c(trt_prop_tbl)
new_tbl2
trt_prop_tbl
cppFunction('void NumVec_ptr(NumericVector& trt_prop_tbl) {
for (int i=0;i<13;i++)
trt_prop_tbl[i] = trt_prop_tbl[i]+1;
//return trt_prop_tbl;
}')
cppFunction('NumericVector NumVec_val(NumericVector trt_prop_tbl) {
for (int i=0;i<13;i++)
trt_prop_tbl[i] = trt_prop_tbl[i]+1;
return trt_prop_tbl;
}')
NumVec_r <- function(trt_prop_tbl) {
trt_prop_tbl[] <- trt_prop_tbl[]+1
}
trt_prop_tbl <- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
NumVec_r(trt_prop_tbl)
trt_prop_tbl
NumVec_ptr(trt_prop_tbl)
trt_prop_tbl
new_tbl <- NumVec_val(trt_prop_tbl)
trt_prop_tbl
cppFunction('NumericVector clone_c(NumericVector trt_prop_tbl) {
NumericVector new_tbl=clone(trt_prop_tbl);
for (int i=0;i<13;i++)
new_tbl[i] = new_tbl[i]+1;
return new_tbl;
}')
cppFunction('NumericVector no_clone_c(NumericVector trt_prop_tbl) {
NumericVector new_tbl=trt_prop_tbl;
for (int i=0;i<13;i++)
new_tbl[i] = new_tbl[i]+1;
return new_tbl;
}')
# incorrect. Will not work at all!
cppFunction('NumericVector wrong_clone_c(NumericVector trt_prop_tbl) {
clone(trt_prop_tbl);
for (int i=0;i<13;i++)
new_tbl[i] = new_tbl[i]+1;
return new_tbl;
}')
# incorrect. Will not work at all!
cppFunction('NumericVector wrong_clone_c(NumericVector trt_prop_tbl) {
clone(trt_prop_tbl);
for (int i=0;i<13;i++)
trt_prop_tbl[i] = trt_prop_tbl[i]+1;
return trt_prop_tbl;
}')
trt_prop_tbl <- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
new_tbl2 <- clone_c(trt_prop_tbl)
new_tbl2
trt_prop_tbl
new_tbl3 <- no_clone_c(trt_prop_tbl)
new_tbl3
trt_prop_tbl
new_tbl4 <- wrong_clone_c(trt_prop_tbl)
new_tbl4
trt_prop_tbl
cppFunction('NumericVector const_c(const NumericVector trt_prop_tbl) {
int n = trt_prop_tbl.size();
NumericVector new_tbl(n);
for (int i=0;i<13;i++)
new_tbl[i] = trt_prop_tbl[i];
return new_tbl;
}')
trt_prop_tbl <- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
new_tbl5 <- const_c(trt_prop_tbl)
new_tbl5
trt_prop_tbl
microbenchmark(
new_tbl2 <- clone_c(trt_prop_tbl),
new_tbl3 <- no_clone_c(trt_prop_tbl),
new_tbl5 <- const_c(trt_prop_tbl)
)
cppFunction('NumericVector& NumVec_ptr(NumericVector& trt_prop_tbl) {
for (int i=0;i<13;i++)
trt_prop_tbl[i] = trt_prop_tbl[i]+1;
return trt_prop_tbl;
}')
trt_prop_tbl <- c(1,2,3,4,5,6,7,8,9,10,11,12,13)
new_tbl7 <- NumVec_ptr(trt_prop_tbl)
trt_prop_tbl
new_tbl7
a <- 1
cppFunction('double& dbl_ptr(double& a) {
double b=a;
a=a+1;
return a;
}')
test <- dbl_ptr(a)
a
test
cppFunction('double& dbl_ptr(double& a) {
double b=a;
a=a+1;
return *a;
}')
cppFunction('double& dbl_ptr(double& a) {
//double b=a;
*a=*a+1;
return a;
}')
a <- c(1,2,3,4)
b <- c(11,12,13,14)
d <- c(21,22,23,24)
my_list <- list(a,b,d)
my_list
my_list[1,3]
my_list
my_list[1]
my_list[3]
my_list[[3]]
test <- my_list[1]
test
test[2] <- 2222
test
my_list[1]
my_list[[1]]
test2 <- my_list[[1]]
test2
test2[2] <- 2222
test2
my_list[1]
my_list[[1]]
my_list[1][2]
my_list[1][1]
my_list[1][1][]2
my_list[1][1][2]
my_list[[1]]
my_list[[1]][2]
my_list[[1]][2] <- 222
my_list[[1]][2] <- 222
my_list[[1]][2]
my_list[[1]]
my_list[1]
a
b
c
d
library(Rcpp)
#comparing pass by value and pass by reference, for double.
# It seems like pass by reference is not working anyway and * sign is not recongnized by cpp.
a <- 1
cppFunction('double& dbl_ptr(double& a) {
//double b=a;
a=a+1;
return a;
}')
b <- db_ptr(a)
b <- dbl_ptr(a)
b
a
library(data.table)
Anyrange<-seq(1,10000,1)
cutoffs<-NULL
# set equal length of the interval, e.g. 4 intervals
cutoffs<-quantile(Anyrange,c(0.25,0.5,0.75,1.0))
length(cutoffs)
table<-data.frame(rep(NA,length(cutoffs)),rep(NA,length(ntimes)))
ntimes<-100
table<-data.frame(rep(NA,length(cutoffs)),rep(NA,length(ntimes)))
length(ntimes)
rep(NA,length(cutoffs))
rep(NA,length(ntimes)
)
View(table)
View(table)
%between% c(cutoffs[1],cutoffs[2])
Anyrange %between% c(cutoffs[1],cutoffs[2])
cutoffs[1]
cutoffs[2]
cutoffs[3]
cutoffs[4]
library(lhs)
install.packages("lhs")
library(lhs)
randomLHS(5, 5)
randomLHS(5, 2)
n <-  1057623
ab_cost <- 20
rna_cost <- 79
ab_specificity <- 0.98
rna_specificity <- 0.999
false_pos_cost <- 571
none_idu_offer_prob <- 0.052
test_pickup_prob <- 0.74
discounting_rate <- 0.0025
ab_tests <- n *  none_idu_offer_prob
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * rna_specificity
total_cost <- total_ab_cost + total_rna_cost + total_false_pos_cost
total_disc_cost <- total_cost/(1+discounting_rate)
total_cost
total_disc_cost
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost/(1+discounting_rate))/n
total_cost
total_disc_cost
total_cost_per_person
1057623*0.052
1057623*0.052*0.74
1057623*0.052*0.74*0.999999
120/40697
ab_tests <- 40578
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * rna_specificity
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost/(1+discounting_rate))/n
total_cost_per_person
total_cost_per_person * n
total_false_pos_cost <- false_pos_cost * rna_tests * (1-rna_specificity)
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost/(1+discounting_rate))/n
total_cost_per_person
ab_tests <- n *  none_idu_offer_prob
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * (1-rna_specificity)
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost/(1+discounting_rate))/n
total_cost_per_person
ab_tests
ab_tests * 0.74
none_idu_offer_prob <- 0.052
test_pickup_prob <- 0.74
n <-  1057623
ab_cost <- 20
rna_cost <- 79
ab_specificity <- 0.98
rna_specificity <- 0.999
false_pos_cost <- 571
discounting_rate <- 0.0025
ab_tests <- n *  none_idu_offer_prob
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * rna_specificity
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost/(1+discounting_rate))/n
none_idu_offer_prob <- 0.052
test_pickup_prob <- 0.74
n <-  1057623
ab_cost <- 20
rna_cost <- 79
ab_specificity <- 0.98
rna_specificity <- 0.999
false_pos_cost <- 571
discounting_rate <- 0.0025
ab_tests <- n *  none_idu_offer_prob
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * rna_specificity
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost_per_person/(1+discounting_rate))/n
total_cost_per_person
none_idu_offer_prob <- 0.052
test_pickup_prob <- 0.74
n <-  1057623
ab_cost <- 20
rna_cost <- 79
ab_specificity <- 0.98
rna_specificity <- 0.999
false_pos_cost <- 571
discounting_rate <- 0.0025
ab_tests <- n *  none_idu_offer_prob
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * (1-rna_specificity)
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost_per_person/(1+discounting_rate))/n
total_cost_per_person
total_disc_cost_per_person
total_disc_cost_per_person <- (total_cost_per_person/(1+discounting_rate))
total_disc_cost_per_person
none_idu_offer_prob <- 0.8
test_pickup_prob <- 0.99
n <-  1057623
ab_cost <- 20
rna_cost <- 79
ab_specificity <- 0.98
rna_specificity <- 0.999
false_pos_cost <- 571
discounting_rate <- 0.0025
ab_tests <- n *  none_idu_offer_prob
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * (1-rna_specificity)
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- (total_cost_per_person/(1+discounting_rate))
total_cost_per_person
total_disc_cost_per_person
none_idu_offer_prob <- 0.8
test_pickup_prob <- 0.99
n <-  1057623
ab_cost <- 20
rna_cost <- 79
ab_specificity <- 0.98
rna_specificity <- 0.999
false_pos_cost <- 571
discounting_rate <- 0.0025
ab_tests <- n *  none_idu_offer_prob
total_ab_cost <- ab_cost * ab_tests
rna_tests <- test_pickup_prob * ab_tests * (1-ab_specificity)
total_rna_cost <- rna_cost * rna_tests
total_false_pos_cost <- false_pos_cost * rna_tests * (1-rna_specificity)
total_cost_per_person <- (total_ab_cost + total_rna_cost + total_false_pos_cost)/n
total_disc_cost_per_person <- total_cost_per_person/(1+discounting_rate)
infected_size <- 450809
uninfected_size <- 1057623
total_size <- infected_size + uninfected_size
uninfected_disc_cost <- 112589.811788597
infected_disc_cost <- 143483.790281792
intervention_disc_cost <- 1.1
final_disc_cost_per_person <- ((uninfected_disc_cost*uninfected_size)+(intervention_disc_cost*uninfected_size)
+(infected_disc_cost*infected_size))/total_size
final_disc_cost_per_person
getwd()
set.seed(1)
a <- rnorm (3,mean=0,sd=1)
a
getwd
getwd()
print(getwd())
# set working directory
this.dir <- dirname(parent.frame(2)$ofile)
install.packages("lhs")
setwd("~/workspace/my_RESPOND/model/codes")
